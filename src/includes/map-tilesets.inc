IF !DEF(MAP_TILESETS_INC)
MAP_TILESETS_INC = 1

Section "MapTilesets", ROM0

PASSABLE EQU %00000000
UNPASSABLE EQU %00000001
SAFE EQU %00000010

BGP0 EQU %00000000
BGP1 EQU %01000000
BGP2 EQU %10000000
BGP3 EQU %11000000

MAP_TILE_DATA EQU $3D

EMPTY_TILE EQU MAP_TILE_DATA + $00
FOREST_TILE EQU MAP_TILE_DATA + $01
MOUNTAIN_TILE EQU MAP_TILE_DATA + $02
DEEP_WATER_TILE EQU MAP_TILE_DATA + $03
SHALLOW_WATER_TILE EQU MAP_TILE_DATA + $04
GRASS_TILE EQU MAP_TILE_DATA + $05
HILLS_TILE EQU MAP_TILE_DATA + $06
WHAT EQU MAP_TILE_DATA + $07
DESERT_TILE EQU MAP_TILE_DATA + $08
SWAMP_TILE EQU MAP_TILE_DATA + $09
TREE_TILE EQU MAP_TILE_DATA + $0A
CACTUS_TILE EQU MAP_TILE_DATA + $0B
BLACK_TILE EQU MAP_TILE_DATA + $0C
VILLAGE_TILE EQU MAP_TILE_DATA + $0D
STONE_WALL_TILE EQU MAP_TILE_DATA + $0E
FLOOR_TILE EQU MAP_TILE_DATA + $0F
STAIRS_DOWN_TILE EQU MAP_TILE_DATA + $10
STAIRS_UP_TILE EQU MAP_TILE_DATA + $11
BRIDGE_TILE EQU MAP_TILE_DATA + $12
TOWER_TILE EQU MAP_TILE_DATA + $13
CHEST_TILE EQU MAP_TILE_DATA + $14
CAVE_TILE EQU MAP_TILE_DATA + $15
STONE_TABLET EQU MAP_TILE_DATA + $16
CAMP_FIRE EQU MAP_TILE_DATA + $17

PLAYER_SPRITE EQU MAP_TILE_DATA + $0F
PLAYER_SPRITE_2 EQU MAP_TILE_DATA + $10

BOAT_TILE EQU $21

/** this tileset is just like overworld but it has
 * bricks and stairs and such, it was used for
 * the underworld, but also villages and such */
InteriorTileset:
  db EMPTY_TILE, TREE_TILE, BLACK_TILE, STONE_WALL_TILE, SHALLOW_WATER_TILE, BRIDGE_TILE, BLACK_TILE, ELDER
  db CULTIST, FALLEN_HERO, STONE_WALL_TILE, FLOOR_TILE, STAIRS_UP_TILE, STAIRS_DOWN_TILE, STONE_TABLET, CAMP_FIRE

InteriorTilesetAttributes:
  db PASSABLE, PASSABLE | BGP2, UNPASSABLE, PASSABLE, UNPASSABLE | BGP1, PASSABLE | BGP1 | SAFE, PASSABLE | BGP2, PASSABLE | SAFE
  db PASSABLE | SAFE, PASSABLE | SAFE, UNPASSABLE, PASSABLE | BGP1, PASSABLE, PASSABLE | SAFE, PASSABLE | SAFE, PASSABLE | SAFE

DungeonTileset:
  db EMPTY_TILE, TREE_TILE, BLACK_TILE, STONE_WALL_TILE, SHALLOW_WATER_TILE, BRIDGE_TILE, BLACK_TILE, ELDER
  db CULTIST, FALLEN_HERO, STONE_WALL_TILE, FLOOR_TILE, STAIRS_UP_TILE, STAIRS_DOWN_TILE, STONE_TABLET, CAMP_FIRE

DungeonTilesetAttributes:
  db PASSABLE, PASSABLE | BGP2, UNPASSABLE, PASSABLE, UNPASSABLE | BGP1, PASSABLE | BGP1 | SAFE, PASSABLE | BGP2, PASSABLE | SAFE
  db PASSABLE | SAFE, PASSABLE | SAFE, UNPASSABLE, PASSABLE | BGP1, PASSABLE, PASSABLE | SAFE, UNPASSABLE, PASSABLE | SAFE

OverworldTileset:
  db EMPTY_TILE, FOREST_TILE, MOUNTAIN_TILE, DEEP_WATER_TILE, SHALLOW_WATER_TILE, BRIDGE_TILE, GRASS_TILE, HILLS_TILE
  db VILLAGE_TILE, CAVE_TILE, TOWER_TILE, STONE_WALL_TILE, BOAT_TILE, CHEST_TILE, STAIRS_UP_TILE, SWAMP_TILE

OverworldTilesetAttributes:
  db PASSABLE, PASSABLE | BGP2, UNPASSABLE, UNPASSABLE | SAFE, UNPASSABLE | BGP1 | SAFE, PASSABLE | BGP1 | SAFE, PASSABLE | BGP2, PASSABLE
  db PASSABLE | SAFE, PASSABLE, PASSABLE | SAFE, PASSABLE, PASSABLE | SAFE | BGP1, PASSABLE, PASSABLE | SAFE, PASSABLE

/** just like overworld but only shallow water tile is passable 
 * 
 * grass has to be handled differently. When getting onto a boat
 * we have the boat and the player on screen, the player moves onto
 * the boat, skipping the normal collision for ocean... then the player
 * disappears. But when getting off the boat it is different: we need to
 * let the boat attempt to move onto grass, so it must be passable, then
 * we interrupt the move with the state change and display the player */
OverworldOceanTileset:
  db EMPTY_TILE, FOREST_TILE, MOUNTAIN_TILE, DEEP_WATER_TILE, SHALLOW_WATER_TILE, BRIDGE_TILE, GRASS_TILE, HILLS_TILE
  db VILLAGE_TILE, CAVE_TILE, TOWER_TILE, STONE_WALL_TILE, BOAT_TILE, CHEST_TILE, STAIRS_UP_TILE, SWAMP_TILE

OverworldOceanTilesetAttributes:
  db PASSABLE, UNPASSABLE | BGP2, UNPASSABLE, UNPASSABLE | SAFE, PASSABLE | SAFE | BGP1, UNPASSABLE | BGP1 | SAFE, PASSABLE | BGP2, UNPASSABLE
  db UNPASSABLE | SAFE, UNPASSABLE, UNPASSABLE | SAFE, UNPASSABLE, UNPASSABLE | SAFE | BGP1, UNPASSABLE, UNPASSABLE | SAFE, UNPASSABLE

/*
  for debugging
  db PASSABLE | SAFE, PASSABLE | SAFE, PASSABLE | SAFE, PASSABLE | SAFE, PASSABLE | SAFE, PASSABLE | SAFE, PASSABLE | SAFE, PASSABLE | SAFE
  db PASSABLE | SAFE, PASSABLE | SAFE, PASSABLE | SAFE, PASSABLE | SAFE, PASSABLE | SAFE, PASSABLE | SAFE, PASSABLE | SAFE, PASSABLE | SAFE
*/

ENDC